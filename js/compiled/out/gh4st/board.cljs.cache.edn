;; Analyzed by ClojureScript 1.7.107
{:use-macros nil, :excludes #{}, :name gh4st.board, :imports nil, :requires {gh4st.math gh4st.math}, :uses {add-pos gh4st.math}, :defs {rows {:name gh4st.board/rows, :file "src/gh4st/board.cljs", :line 8, :column 1, :end-line 8, :end-column 10, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/gh4st/board.cljs", :line 8, :column 6, :end-line 8, :end-column 10}}, cols {:name gh4st.board/cols, :file "src/gh4st/board.cljs", :line 9, :column 1, :end-line 9, :end-column 10, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/gh4st/board.cljs", :line 9, :column 6, :end-line 9, :end-column 10}}, empty-board {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/gh4st/board.cljs", :line 11, :column 7, :end-line 11, :end-column 18, :arglists (quote ([] [w h])), :doc "create initial empty board", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [w h]), :arglists ([] [w h]), :arglists-meta (nil nil)}}, :name gh4st.board/empty-board, :variadic false, :file "src/gh4st/board.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [w h]), :arglists ([] [w h]), :arglists-meta (nil nil)}, :method-params ([] [w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists ([] [w h]), :doc "create initial empty board"}, bound {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/gh4st/board.cljs", :line 17, :column 7, :end-line 17, :end-column 12, :arglists (quote ([x0 x x1]))}, :name gh4st.board/bound, :variadic false, :file "src/gh4st/board.cljs", :end-column 12, :method-params ([x0 x x1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x0 x x1]))}, board-size {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/gh4st/board.cljs", :line 24, :column 7, :end-line 24, :end-column 17, :arglists (quote ([board]))}, :name gh4st.board/board-size, :variadic false, :file "src/gh4st/board.cljs", :end-column 17, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, bound-pos {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/gh4st/board.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([[x y] board]))}, :name gh4st.board/bound-pos, :variadic false, :file "src/gh4st/board.cljs", :end-column 16, :method-params ([p__42137 board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x y] board]))}, can-walk? {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/gh4st/board.cljs", :line 35, :column 7, :end-line 35, :end-column 16, :arglists (quote ([pos dir board]))}, :name gh4st.board/can-walk?, :variadic false, :file "src/gh4st/board.cljs", :end-column 16, :method-params ([pos dir board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pos dir board]))}, walkable-tiles {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/gh4st/board.cljs", :line 40, :column 7, :end-line 40, :end-column 21, :arglists (quote ([pos board]))}, :name gh4st.board/walkable-tiles, :variadic false, :file "src/gh4st/board.cljs", :end-column 21, :method-params ([pos board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos board]))}, ghost-positions {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/gh4st/board.cljs", :line 46, :column 7, :end-line 46, :end-column 22, :arglists (quote ([actors]))}, :name gh4st.board/ghost-positions, :variadic false, :file "src/gh4st/board.cljs", :end-column 22, :method-params ([actors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([actors]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:inky :else :clyde :wall :pos :pinky :floor :blinky}, :order [:wall :else :floor :pos :blinky :pinky :inky :clyde]}, :doc nil}
;; Analyzed by ClojureScript 1.7.107
{:use-macros nil, :excludes #{}, :name ld33-gh4st.board, :imports nil, :requires nil, :uses nil, :defs {empty-board {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/ld33_gh4st/board.cljs", :line 4, :column 7, :end-line 4, :end-column 18, :arglists (quote ([w h])), :doc "create initial empty board"}, :name ld33-gh4st.board/empty-board, :variadic false, :file "src/ld33_gh4st/board.cljs", :end-column 18, :method-params ([w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([w h])), :doc "create initial empty board"}, bound {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/ld33_gh4st/board.cljs", :line 9, :column 7, :end-line 9, :end-column 12, :arglists (quote ([x0 x x1]))}, :name ld33-gh4st.board/bound, :variadic false, :file "src/ld33_gh4st/board.cljs", :end-column 12, :method-params ([x0 x x1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x0 x x1]))}, bound-pos {:protocol-inline nil, :meta {:file "/Users/swilliam/code/ld33-gh4st/src/ld33_gh4st/board.cljs", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([[x y]]))}, :name ld33-gh4st.board/bound-pos, :variadic false, :file "src/ld33_gh4st/board.cljs", :end-column 16, :method-params ([p__72898]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :wall :board}, :order [:wall :else :board]}, :doc nil}